/*
*
*   Button component
*
*/

@use "../tools" as tools;
@use "../settings/" as settings;

.button {
    align-items: center;
    border-radius: tools.rounded(md);
    box-sizing: border-box;
    cursor: pointer;
    display: inline-flex;
    line-height: 1.5;
    gap: 0.5rem;
    transition: all 150ms ease-in-out;
    transform: scale(1);
    padding: 0.5rem 1rem;
    position: relative;

    &--small {
        font-size: 0.75rem;
        line-height: 1rem;
        padding: 0.25rem 0.5rem;
        border-radius: tools.rounded(sm);
    }

    &--large {
        font-size: 1.25rem;
        line-height: 1.75rem;
        padding: 0.75rem 1.5rem;
    }

    &--reverse {
        flex-direction: row-reverse;
    }

    &--primary {
        background-color: var(--primary-page);
        color: var(--primary-page-contrast);
    }

    &--secondary {
        background-color: var(--secondary-page);
        color: var(--secondary-page-contrast);
    }

    &:hover,
    &:focus {
        animation: button-zoom-in 150ms ease-in-out;
        transform: scale(1.1);
    }

    @each $key, $color in settings.$themecolors {
        &--#{$key} {
            background: map-get($color, color);
            color: map-get($color, contrast);

            &.button--link {
                color: map-get($color, color);
                background: transparent;

                &:hover {
                    background: map-get($color, light);
                }
            }

            &.button--outline {
                color: map-get($color, color);
                background: transparent;
                border: 2px solid map-get($color, color);

                &::hover {
                    color: map-get($color, contrast);
                    background: map-get($color, color) !important;
                }
            }
        }
    }

    &--skew {
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);
        -webkit-transition-duration: 0.3s;
        transition-duration: 0.3s;
        -webkit-transition-property: transform;
        transition-property: transform;
        -webkit-transform-origin: 0 100%;
        transform-origin: 0 100%;

        &:hover {
            -webkit-transform: skew(-8deg) translate(0.375rem);
            transform: skew(-8deg) translate(0.375rem);
        }
    }

    &--pop {
        vertical-align: middle;
        -webkit-transform: perspective(1px) translateZ(0);
        transform: perspective(1px) translateZ(0);

        &:active {
            -webkit-animation-name: ctx-pop;
            animation-name: ctx-pop;
            -webkit-animation-duration: 0.3s;
            animation-duration: 0.3s;
            -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
            -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
        }
    }

    &--icon {
        aspect-ratio: 1/1;
        padding: 9px;
        border-radius: 999px;

        i {
            margin-right: 0px;
            line-height: 10px;
        }
    }

    .badge {
        position: relative !important;
        margin-left: tools.space(4);
    }
}

.button--pseudo {
    cursor: default;
}

.button-group {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;

    &--right {
        justify-content: flex-end;
    }

    &--center {
        justify-content: center;
    }

    &--left {
        justify-content: flex-start;
    }
}

/*
*   Animation stuff
*/

@-webkit-keyframes ctx-pop {
    50% {
        -webkit-transform: scale(1.2);
        transform: scale(1.2);
    }
}

@keyframes ctx-pop {
    50% {
        -webkit-transform: scale(1.2);
        transform: scale(1.2);
    }
}

/*
* deprecated?
*/
.button:not(.outline):hover::after {
    opacity: 1;
}

.button:not(.outline):hover::after {
    opacity: 1;
}

.button.outline.light:hover {
    color: #000000dd !important;
}

.button.outline.dark:hover {
    color: #ffffffdd !important;
}

.button:disabled,
.button--disabled {
    background: tools.gray(300);
    color: tools.gray(500);
}

.button:disabled:hover,
.button--disabled:hover {
    animation: button-say-no !important;
}
